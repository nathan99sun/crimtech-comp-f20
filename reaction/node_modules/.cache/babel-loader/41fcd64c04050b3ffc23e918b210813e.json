{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nathansun/reactions/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React from 'react';\n\nclass Panel extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handle_color = c => {// TODO: Your code here!\n    };\n\n    this.state = {\n      start_time: 0,\n      ran_once: false,\n      counting: false,\n      true_duration: 2000 + Math.random() * (7000 - 2000),\n      reaction_time: 0,\n      color: 'green'\n    };\n    this.process_click = this.process_click.bind(this);\n  }\n\n  start_count() {\n    //set start_time to how long since the window's been opened\n    this.setState({\n      start_time: window.performance.now()\n    }); //set duration to a random number between 2 & 7\n\n    this.setState({\n      true_duration: 2000 + Math.random() * (7000 - 2000)\n    });\n    console.log(this.state.true_duration); // set counting to true\n\n    this.setState({\n      counting: true\n    }); //set color to dark red\n\n    this.setState({\n      color: 'darkred'\n    });\n    setTimeout(function () {\n      this.setState({\n        color: 'green'\n      });\n    }.bind(this), this.state.true_duration);\n  }\n\n  end_count() {\n    if (window.performance.now() - this.start_time > this.true_duration) {\n      this.setState({\n        ran_once: true\n      });\n      this.setState({\n        counting: false\n      });\n      this.setState({\n        reaction_time: window.performance.now() - this.start_time - this.true_duration\n      });\n      console.log(this.state.reaction_time);\n    }\n  }\n\n  process_click() {\n    if (this.state.counting) {\n      this.end_count();\n    } else {\n      this.start_count();\n    }\n  }\n\n  render() {\n    let msg = \"Hello World!\"; // TODO: Your code here!\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PanelContainer\",\n      onClick: this.process_click,\n      style: {\n        background: this.state.color\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Panel\",\n        children: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Header\",\n        children: \"How Fast is your Reaction Time?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Panel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click as soon as the red box turns green. Click anywhere in the box to start.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nathansun/reactions/src/App.js"],"names":["React","Panel","Component","constructor","props","handle_color","c","state","start_time","ran_once","counting","true_duration","Math","random","reaction_time","color","process_click","bind","start_count","setState","window","performance","now","console","log","setTimeout","end_count","render","msg","background","App"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\n\nclass Panel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { start_time: 0, ran_once: false, counting: false, true_duration: 2000 + Math.random() * (7000 - 2000), reaction_time: 0, color: 'green'};\n    this.process_click = this.process_click.bind(this);\n  }\n  handle_color = (c) => {\n    // TODO: Your code here!\n  }\n  start_count() {\n    //set start_time to how long since the window's been opened\n    this.setState({start_time: window.performance.now()});\n\n    //set duration to a random number between 2 & 7\n\n    this.setState({true_duration: 2000 + Math.random() * (7000 - 2000)});\n    console.log(this.state.true_duration);\n    // set counting to true\n    this.setState({counting:true});\n\n    //set color to dark red\n    this.setState({color:'darkred'});\n    \n    setTimeout(\n      function() {\n          this.setState({ color: 'green' });\n      }\n      .bind(this),\n      this.state.true_duration\n  );\n  }\n\n  end_count() {\n   if (window.performance.now() - this.start_time > this.true_duration)\n   {\n      this.setState({ran_once : true});\n      this.setState({counting : false});\n      this.setState({reaction_time : window.performance.now() - this.start_time - this.true_duration});\n      console.log(this.state.reaction_time);\n   }\n  }\n  process_click() {\n    if (this.state.counting) {\n      this.end_count();\n    } else {\n      this.start_count();\n      \n    }\n  }\n  render() {\n    let msg = \"Hello World!\";\n    // TODO: Your code here!\n    return (\n      <div className = \"PanelContainer\" onClick = {this.process_click} style={ { background: this.state.color} }>\n        <div className = \"Panel\">{msg}</div>\n      </div>\n    );\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 className =  \"Header\">How Fast is your Reaction Time?</h1>\n        <Panel />\n        <p>Click as soon as the red box turns green. Click anywhere in the box to start.</p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}